<!--Author: Ezra Gerris, Marleen van Gent, Thijs Lacquet and Tanja Markink-->
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<link rel="stylesheet" href="main.css">
	<link rel="stylesheet" href="rangeslider.css">
	<script src="Scripts/Visualizations/visualization.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/Heatmap.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/Scarfplot.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/Scanpath.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/ParallelScanpath.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/data.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/AOIselection.js" type="text/javascript"></script>
	<script src="Scripts/Visualizations/rangeslider.js" type="text/javascript"></script>
	<script src="Scripts/DraggableUser.js" type="text/javascript"></script>
	<script src="Scripts/UserContainer.js" type="text/javascript"></script>

	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
	<script src="https://d3js.org/d3.v4.min.js"></script>
	<!--<link rel="stylesheet" type="text/css" href="../Visualizations/visualization.css">-->
	<title>Visualization</title>

	<script>
		//Input data
		//By Nathan
		//var imageName = "01_Antwerpen_S1.jpg";


		function setCookie(cname, cvalue, exdays) {
		  var d = new Date();
		  d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));
		  var expires = "expires="+d.toUTCString();
		  document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
		}

		//this sets the cookie such that the test link is visible
		setCookie("uploaded", "true", 1);
	</script>

</head>
<body style="font-family: Arial, sans-serif;">

	<div class="nav">
		<a href="index.htm">Home</a>
		<a href="visualization.htm">Information</a>
		<a href="upload.htm">Upload</a>
		<a class="active" href="#test">Visualization</a>
	</div>

	<div class="header">
		<h1>Visualization page</h1>
		<p>By group 39</p>
	</div>

	<script>
	function load() {
		var array = null;
		var superThis = this;
		$.post( "/Scripts/imageNames.php", function( data ) {
			array = JSON.parse(data);
			superThis.loading(array);
		});
	}

	function loading(data) {
		//Select background image
		var i = 0;
		var imageNameContainer = document.getElementById("imageNameContainer")
		var tempHtml = ""
		while (i < data.length) {
			tempHtml = tempHtml + '<a id="myLink" onclick="MyFunction(' + "'" + data[i] + "'" + ');">' + data[i] + '</a>'
			i = i + 1;
		}
		imageNameContainer.innerHTML = tempHtml
	}
	load()
	</script>

	<script>
	function MyFunction(image) {
		var imagePath = "Scripts/getImage.php?img=" + image;
		myHeatmap.setImage(imagePath);
		myScanpath.setImage(imagePath);
		myScarfplot.setImage(imagePath);
		aoiImg.src = imagePath;

		window.d = new data(image, update, init);
		userContainer.draw(data);
	}
	</script>

	<!--JS dropdown menu-->
	<script>
	function hideOrShow() {
		document.getElementById("dropdown").classList.toggle("show");
	}

	function filterFunction() {
		var input, filter, b, c;
		input = document.getElementById("input");
		filter = input.value.toUpperCase();
		div = document.getElementById("dropdown");
		b = div.getElementsByTagName("a");
		for (c = 0; c < b.length; c++) {
			txtValue = b[c].textContent || b[c].innerText;
			if (txtValue.toUpperCase().indexOf(filter) > -1) {
				b[c].style.display = "";
			} else {
				b[c].style.display = "none";
			}
		}
	}
	</script>

	<!-- Grid for toolbar -->
	<div class="grid_tools">
			<div>

			<div>
			<button class="helpButton" id='helpSelectImg'>?</button>
			<div id="modalSelectImg" class="modal">
				<div class = "modal-content">
					<span class="close">&times;</span>
					<p>Click on the "Select a background image" button to select the image of which you want to see the visualizations.
					Only uploaded images are shown in this menu.<p>
				</div>
			</div>
			</div>

			<div class="dropdown">
				<button onclick="hideOrShow()" class="dropbutton">Select a background image</button>
				<div id="dropdown" class="content">
					<input type="text" placeholder="Search..." id="input" onkeyup="filterFunction()">
					<div id="imageNameContainer">
					</div>
				</div>
			</div>

		</div>

		<div>

			<div>
				<button class="helpButton" id='helpDownload'>?</button>
				<div id="modalDownload" class="modal">
					<div class = "modal-content">
						<span class="close">&times;</span>
						<p>Click on the download buttons to save the visualization or AOI selection image to your computer.<p>
					</div>
				</div>
			</div>

			<div class="download">
				<input type="button" class="button" id="download_heatmap" value="Download heatmap"/>
				<input type="button" class="button" id="download_scarfplot" value="Download scarfplot"/>
				<input type="button" class="button" id="download_scanpath" value="Download gaze plot"/>
				<input type="button" class="button" id="download_parallelscanpath" value="Download parallel scanpath"/>
				<input type="button" class="button" id="download_aoi" value="Download AOIs"/>
			</div>

		</div>

		<div>
			<div>
				<button class="helpButton" id='helpEnable'>?</button>
				<div id="modalEnable" class="modal">
					<div class = "modal-content">
						<span class="close">&times;</span>
						<p> In this menu you are able to enable, disable and swap users.
						When you click on "enable all users", the data of all participants is shown.
						When you click on "disable all users", none of the data is shown.
						When you click on a specific user you can enable or disable that user.
						A user that is disabled is marked red.
						You can drag users to swap in which order they are drawn.
						<p>
					</div>
				</div>
			</div>

			<div class="tool3">
				<div id="userDropdown" class="contentUsers">
					<a class="userHeader">Enable/disable or swap users</a>
					<div class="userContainer" id="userContainer"></div>
				</div>
			</div>
		</div>

		<div>

			<div>
				<button class="helpButton" id='helpHeatmap'>?</button>
				<div id="modalHeatmap" class="modal">
					<div class = "modal-content">
						<span class="close">&times;</span>
						<p>By dragging the slider you can alter the radius with which the heat map visualization is drawn.
						The individual fixation points become clearer when the radius is decreased.<p>
					</div>
				</div>
			</div>

			<div class="tool4">
				Alter the radius in the heatmap
				<input type="range" min="1" max="200" value="40" class="slider" id="heatmapRadius">
			</div>
		</div>

		<div>

			<div>
				<button class="helpButton" id='helpGazeplot'>?</button>
				<div id="modalGazeplot" class="modal">
					<div class = "modal-content">
						<span class="close">&times;</span>
						<p>By dragging the slider you can alter the radius with which the gaze plot visualization is drawn.
						By decreasing the radius, the visualization turns into a scan path visualization.
						By increasing the radius, the larger individual fixation durations become more clear.<p>
					</div>
				</div>
			</div>

			<div class="tool5">
				Alter the radius in the gaze plot
				<div class="slidecontainer">
		  		<input type="range" min="1" max="30" value="15" class="slider" id="myRange">
		  		<p>Value: <span id="value"></span></p>
	  		</div>
			</div>

		</div>

		<div>

			<div>
				<button class="helpButton" id='helpFilter'>?</button>
				<div id="modalFilter" class="modal">
					<div class = "modal-content">
						<span class="close">&times;</span>
						<p>Drag the upper slider to filter on the total duration.
						Drag the lower slider to filter on the individual fixation duration.
						After you have set the filters, please click on the 'set filters' button to set the filters.
						The visualizations will then be drawn based on this filter.<p>
					</div>
				</div>
			</div>

			<div class="tool6">
				Filter on time and duration
				<div id="timeslider" style="height: 50px; margin: 20px 0px;"></div>
				<div id="durationslider" style="height: 50px; margin: 20px 0px 0px 0px;"></div>
				<button class="setButton" onclick="updateFilter()">set filters</button>
			</div>
		</div>
	</div>

	<div class="AOIselection">
		<div id="AOISelection" style="font-size: 0">
			<img id="aoiImage" style="height: 100%; width: 100%; z-index: 1">
		</div>
		<div style="height: 20%; text-align: center">
			<button class="setButton" onclick="updateAOIs();">set AOIs</button>
			<button class="helpButton" id='helpAOI'>?</button>
			<div id="modalAOI" class="modal">
				<div class = "modal-content">
					<span class="close">&times;</span>
					<p>You can select the AOIs in the figure above by clicking on the image and hovering your mouse over the area that interests you at the same time.
						You can add multiple AOIs. If you want to delete an AOI you can click on it and then it erases itself.
						After you have set the AOIs, you can click on the 'setAOIS' button to draw the scarf plot and the parallel scan path visualizations.<p>
				</div>
			</div>
		</div>
	</div>

	<script>
		var userContainerID = document.getElementById("userContainer");
		userContainer = new UserContainer(userContainerID);

	var slider = document.getElementById("myRange");
	var output = document.getElementById("value");
	output.innerHTML = slider.value; // Display the default slider value

	// Update the current slider value (each time you drag the slider handle)
	slider.oninput = function() {
	  output.innerHTML = this.value;
	  size = (this.value/1000);
	  myScanpath.clearVisualization();
	  myScanpath.setData(d, size);
	  myScanpath.draw();
	}
	</script>

	<!-- Grid for dynamic visualizations -->
	<div class="grid_linking">
		<div class="heatmapE">
			<div id="visContainerHM">
				<div id="visImgContainerHM">
						<img id="myImageHM">
				</div>
				<div id="visCanvasContainerHM">
					<canvas id="myCanvasHM"></canvas>
				</div>
			</div>
		</div>

		<div class="scarfplotE">
			<div id="visContainerSP">
				<div id="visImgContainerSP">
						<img id="myImageSP">
				</div>
				<div id="visCanvasContainerSP">
					<canvas id="myCanvasSP"></canvas>
				</div>
			</div>
			<div id="scarfPlotContainer">
				<canvas id="scarfCanvas"></canvas>
			</div>
		</div>

		<div class="scanpathE">
			<div id="visContainerSC">
				<div id="visImgContainerSC">
					<img id= "myImageSC">
				</div>
				<div id="visCanvasContainerSC">
					<canvas id="myCanvasSC"></canvas>
				</div>
			</div>
		</div>

		<div class="parallelSP">
			<div id="visContainerPSP">
				<div id="visCanvasContainerPSP">
					<canvas id="myCanvasPSP"></canvas>
				</div>
			</div>
		</div>
	</div>

	<script>
	//help button for drop down menu
	var modalSelect = document.getElementById("modalSelectImg");
	var buttonSelectImg = document.getElementById("helpSelectImg");
	var helpButtons = ["helpSelectImg", "helpDownload", "helpEnable", "helpHeatmap", "helpGazeplot", "helpFilter", "helpAOI"];
	var helpModals = ["modalSelectImg", "modalDownload", "modalEnable", "modalHeatmap", "modalGazeplot", "modalFilter", "modalAOI"];

	for (var i = 0; i < helpButtons.length; i++) {
		setHelpButtons(helpButtons[i], helpModals[i], i);
	}

	function setHelpButtons(buttonModal, modalSelect, number) {
		var span = document.getElementsByClassName("close")[number]
		var modal = document.getElementById(modalSelect);
		var buttonModal = document.getElementById(buttonModal);

		buttonModal.onclick = function() {
			modal.style.display = "block";
		}

		span.onclick = function() {
			modal.style.display = "none";
		}

		window.onclick = function(event) {
			if (event.target == modal) {
				modal.style.display = "none";
			}
		}
	}
	</script>

	<script>
			var imageName;
			var myAOIselection = new AOIselection();

			//making the data instance a global variable
			window.d = null;
			var d = window.d;

			//Execute php script to access image outside of webserver root directory
			var imagePath = "Scripts/getImage.php?img=" + imageName;

			//AOI image selector
			var aoiImg = document.getElementById('aoiImage');
			aoiImg.src = imagePath;
			var myAOIselection;

			//Initialize aoiselection if image is loaded
			if (aoiImg.naturalWidth != 0) {
				myAOIselection = new AOIselection();
			} else {
				aoiImg.onload = function () {
					myAOIselection = new AOIselection();
					aoiImg.onload = function () {} //Rest onload function
				}
			}


			//Drawing the heatmap
			var img = document.getElementById('myImageHM');
			var canvas = document.getElementById('myCanvasHM');
			var visContainerHM = document.getElementById('visContainerHM');
			var visImgContainerHM = document.getElementById('visImgContainerHM');
			var download_button = document.getElementById("download_heatmap");
			var slider = document.getElementById("heatmapRadius");

			myHeatmap = new Heatmap(canvas, img, slider);
			myHeatmap.setDownloadButton(download_button, canvas, "Heatmap");
			myHeatmap.setImage(imagePath);

			//Drawing the scarfplot
			var img = document.getElementById('myImageSP');
			var canvas = document.getElementById('myCanvasSP');
			var visContainerSP = document.getElementById('visContainerSP');
			var visImgContainerSP = document.getElementById('visImgContainerSP');
			var scarfCanvas = document.getElementById('scarfCanvas');
			var scarfPlotContainer = document.getElementById('scarfPlotContainer');
			var download_button = document.getElementById("download_scarfplot");
			var download_aoi = document.getElementById("download_aoi");

			myScarfplot = new Scarfplot(canvas, scarfCanvas, img);
			myScarfplot.setDownloadButton(download_button, scarfCanvas, "Scarfplot");
			myScarfplot.setDownloadButton(download_aoi, canvas, "AOI");
			myScarfplot.setImage(imagePath);

			//Drawing the scanpath
			var size = 0.01;

			var img = document.getElementById('myImageSC');
			var canvas = document.getElementById('myCanvasSC');
			var visContainerSC = document.getElementById('visContainerSC');
			var visImgContainerSC = document.getElementById('visImgContainerSC');
			var download_button = document.getElementById("download_scanpath");

			var width = visImgContainerSC.clientWidth;
			var height = visImgContainerSC.clientHeight;

			myScanpath = new Scanpath(canvas, img);
			myScanpath.setDownloadButton(download_button, canvas, "Scanpath");
			myScanpath.setImage(imagePath);

			//Setting up the parallel scanpath
			var canvas = document.getElementById('myCanvasPSP');
			var visContainerPSP = document.getElementById('visContainerPSP');
			var download_button = document.getElementById("download_parallelscanpath");

			myParallelScanpath = new ParallelScanpath(canvas);
			myParallelScanpath.setDownloadButton(download_button, canvas, "Parallelscanpath");

			//Passing through the data to the visualization instances
			function setData(d){
				d.divideInAOIs();

				myParallelScanpath.setData(d);
				myScarfplot.setData(d);
				myScanpath.setData(d, size);
				myHeatmap.setData(d);
			}

			//drawing the visualizations
			function draw(){
				myParallelScanpath.clearVisualization();
				myScarfplot.clearVisualization();
				myScanpath.clearVisualization();
				myHeatmap.clearVisualization();

				myParallelScanpath.draw();
				myScarfplot.draw();
				myScanpath.draw();
				myHeatmap.draw();

				userContainer.draw(d);
			}

			//this happens only on initialization of the data class
			function init(d){
				makesliders(d);
			}

			//this happens each time the data is updated, for example when a filter is applied
			function update(d){
				setData(d);
				draw();
			}

			//data class is initialized, this however waits asynchronously on the response from the server
			//So this variable is not immediately not null
      window.d = new data(imageName, update, init);
			var d = window.d;

			var timeslider;
			var durationslider;

			//making the interval sliders
			timeslider = new RangeSlider({
			    id:"timeslider",
			    range: {min:0, max:1},
			    handles:[0, 1],
			    width:200,
			    displayValue:true
			});

			durationslider = new RangeSlider({
			    id:"durationslider",
			    range: {min:0, max:1},
			    handles:[0, 1],
			    width:200,
			    displayValue:true
			});

			function makesliders(d){
				var maxt = d.maxtime;
				var maxdt = d.getmaxduration();

				timeslider.reset({
				    id:"timeslider",
				    range: {min:0, max:maxt},
				    handles:[0, maxt],
				    width:200,
				    displayValue:true
				});

				durationslider.reset({
				    id:"durationslider",
				    range: {min:0, max:maxdt},
				    handles:[0, maxdt],
				    width:200,
				    displayValue:true
				});
			}

			//this is called every time the AOIs need to be updated, so when the button below the AOI selector is pressed
			function updateAOIs(){
				var AOIs = myAOIselection.getcoords();
				d.setAOIs(AOIs);
				d.update();
			}

			//this is called by the 'set' below the interval sliders
			function updateFilter(){
				var timeinterval = timeslider.getInterval();
				var durationinterval = durationslider.getInterval();

				d.resetentryfilter();
				d.timeRange(timeinterval[0], timeinterval[1]);
				d.durationRange(durationinterval[0], durationinterval[1]);

				d.update();
			}
	</script>

	<script>
			var imagePath = "Images/uploadfoto.png";
			myHeatmap.setImage(imagePath);
			myScanpath.setImage(imagePath);
			myScarfplot.setImage(imagePath);
			aoiImg.src = imagePath;
	</script>

</body>
</html>
